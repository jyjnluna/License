1. 소프트웨어 개발 방법론

소프트웨어 생명주기의 개념
- 소프트웨어 생명주기는 시스템의 요구분석부터 유지보수까지 전 공정을 채계화한 절차이다.

소프트웨어 생명주기 모델 프로세스 순서
(1) 요구사항 분석 (2) 설계 (3) 구현 (4) 테스트 (5) 유지보수

소프트웨어 생명주기 모델 종류
폭포수모델(Waterfall Model) / 프로토타이핑 모델(Prototype Model) / 나선형 모델(Spiral Model) / 반복적 모델(Iteration Model)

소프트웨어 개발 방법론의 개념
- 소프트웨어 개발 방법론은 소프트웨어 개발 전 과정에 지속적으로 적용할 수 있는 방법, 절차, 기법이다.

소프트웨어 개발 방법론 종류
구조적 방법론(Structured Development), 정보공학 방법론(Information Engineering Development), 객체 지향 방법론(Object-Oriented Development), 컴포넌트 기반 방법론(CBD; Component Based Development), 애자일 방법론(Agile Development)

애자일 방법론의 개념
- 애자일 방법론은 절차보다는 사람이 중심이 되어 변화에 유연하고 신속하게 적응하면서 효율적으로 시스템을 개발할 수 있는 신속 적응적 경량 개발 방법론이다.
- 개발 기간이 짧고 신속하며, 폭포수 모형에 대비되는 방법론으로 개발과 함께 즉시 피드백을 받아서 유동적으로 개발할 수 있다.

객체 지향 분석의 개념
- 객체 지향 분석(OAA; Object Oriented Analysis)은 사용자의 요구사항을 분석하여 요구된 문제와 관련된 모든 클래스(객체), 속성과 연산, 관계를 정의하여 모델링하는 기법이다.

럼바우의 객체 지향 분석 방법론
- 그래픽 표기법을 이용하여 소프트웨어 구성요소를 모델링하는 방법론
- 분석 절차는 객체 모델링 -> 동적 모델링 -> 기능 모델링 순서로 진행

객체 모델링(Object Modeling) : 정보 모델링(Information Modeling)이라고도 함
시스템에서 요구하는 객체를 찾고 객체들 간의 관계를 정의하여 ER다이어그램을 만드는 과정까지의 모델링, 객체 다이어그램을 활용하여 표현

동적 모델링(Dynamic Modeling) : 시간의 흐름에 따라 객체들 사이의 제어 흐름, 동작 순서 등의 동적인 행위를 표현하는 모델링, 상태 다이어그램을 활용하여 표현

기능 모델링(Functional Modeling) : 프로세스들의 자료 흐름을 중심으로 처리 과정 표현하는 모델링, 자료 흐름도(DFD)를 활용하여 표현



